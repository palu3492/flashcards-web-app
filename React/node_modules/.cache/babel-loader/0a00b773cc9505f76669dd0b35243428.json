{"ast":null,"code":"import _classCallCheck from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\src\\\\components\\\\pages\\\\flashcardSets\\\\viewFlashcardSet\\\\ViewFlashcardSet.js\";\nimport React, { Component } from 'react';\nimport Flashcards from './Flashcards.js';\nimport ViewSetHeader from './ViewSetHeader.js';\n\nvar ViewFlashcardSet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewFlashcardSet, _Component);\n\n  function ViewFlashcardSet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewFlashcardSet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewFlashcardSet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      set: {},\n      isLoad: false\n    };\n    return _this;\n  }\n\n  _createClass(ViewFlashcardSet, [{\n    key: \"componentDidMount\",\n\n    /*\r\n    state = {\r\n        flashcards:[\r\n            {\r\n                id: 1,\r\n                term: 'Scarcity',\r\n                definition: 'The limited nature of society’s resources'\r\n            },\r\n            {\r\n                id: 2,\r\n                term: 'Economics',\r\n                definition: 'The study of how society manages its scarce resources'\r\n            },\r\n            {\r\n                id: 3,\r\n                term: 'Efficiency',\r\n                definition: 'The property of society getting the most it can from its scarce resources'\r\n            },\r\n            {\r\n                id: 4,\r\n                term: 'Equality',\r\n                definition: 'The property of distributing economic prosperity uniformly among the members of society'\r\n            },\r\n            {\r\n                id: 5,\r\n                term: 'Opportunity cost',\r\n                definition: 'Whatever must be given up to obtain some item'\r\n            },\r\n            {\r\n                id: 6,\r\n                term: 'Marginal change',\r\n                definition: 'A small incremental adjustment to a plan of action'\r\n            }\r\n        ]\r\n    };\r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item:[],\r\n            isLoaded: false\r\n        }\r\n    }\r\n    */\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\n      fetch(api).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        json['sets'];\n\n        _this2.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    }\n    /*\r\n    if(!isLoaded){\r\n            return <div> Loading... </div>\r\n        }else{\r\n            return (\r\n                <ul>\r\n                {items['flashcards'].map(item => (\r\n                    <li key={item.id}>\r\n                        {item.term}\r\n                    </li>\r\n                ))};\r\n                </ul>\r\n            );\r\n        }\r\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(ViewSetHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Flashcards, {\n        flashcards: this.state.flashcards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ViewFlashcardSet;\n}(Component);\n\nexport default ViewFlashcardSet;","map":{"version":3,"sources":["X:\\Programming\\Websites\\React Websites\\Flashcards\\react-flashcard-app\\src\\components\\pages\\flashcardSets\\viewFlashcardSet\\ViewFlashcardSet.js"],"names":["React","Component","Flashcards","ViewSetHeader","ViewFlashcardSet","state","set","isLoad","api","fetch","then","res","json","setState","isLoaded","items","flashcards"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;IAEMC,gB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,GAAG,EAAE,EADD;AAIJC,MAAAA,MAAM,EAAE;AAJJ,K;;;;;;;AAMR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCA4CmB;AAAA;;AACf,UAAMC,GAAG,GAAG,qEAAZ;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAE,IAAI,EAAI;AACVA,QAAAA,IAAI,CAAC,MAAD,CAAJ;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,KAAK,EAAEH;AAFG,SAAd;AAIH,OARL;AASH;AAED;;;;;;;;;;;;;;;;;;6BAiBS;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWW,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAzF0Bf,S;;AA4F/B,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Flashcards from './Flashcards.js';\r\nimport ViewSetHeader from './ViewSetHeader.js';\r\n\r\nclass ViewFlashcardSet extends Component {\r\n\r\n    state = {\r\n        set: {\r\n\r\n        },\r\n        isLoad: false\r\n    };\r\n    /*\r\n    state = {\r\n        flashcards:[\r\n            {\r\n                id: 1,\r\n                term: 'Scarcity',\r\n                definition: 'The limited nature of society’s resources'\r\n            },\r\n            {\r\n                id: 2,\r\n                term: 'Economics',\r\n                definition: 'The study of how society manages its scarce resources'\r\n            },\r\n            {\r\n                id: 3,\r\n                term: 'Efficiency',\r\n                definition: 'The property of society getting the most it can from its scarce resources'\r\n            },\r\n            {\r\n                id: 4,\r\n                term: 'Equality',\r\n                definition: 'The property of distributing economic prosperity uniformly among the members of society'\r\n            },\r\n            {\r\n                id: 5,\r\n                term: 'Opportunity cost',\r\n                definition: 'Whatever must be given up to obtain some item'\r\n            },\r\n            {\r\n                id: 6,\r\n                term: 'Marginal change',\r\n                definition: 'A small incremental adjustment to a plan of action'\r\n            }\r\n        ]\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item:[],\r\n            isLoaded: false\r\n        }\r\n    }\r\n    */\r\n    componentDidMount(){\r\n        const api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\r\n        fetch(api)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                json['sets']\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json,\r\n                })\r\n            });\r\n    }\r\n\r\n    /*\r\n    if(!isLoaded){\r\n            return <div> Loading... </div>\r\n        }else{\r\n            return (\r\n                <ul>\r\n                {items['flashcards'].map(item => (\r\n                    <li key={item.id}>\r\n                        {item.term}\r\n                    </li>\r\n                ))};\r\n                </ul>\r\n            );\r\n        }\r\n     */\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ViewSetHeader/>\r\n                <Flashcards flashcards={this.state.flashcards}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewFlashcardSet;\r\n"]},"metadata":{},"sourceType":"module"}