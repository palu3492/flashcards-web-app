{"ast":null,"code":"import _classCallCheck from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\src\\\\components\\\\pages\\\\flashcardSets\\\\viewAsFlashcards\\\\ViewAsFlashcards.js\";\nimport React, { Component } from 'react';\nimport ViewFlashcardsHeader from './ViewFlashcardsHeader.js';\nimport StudyFlashcards from './StudyFlashcards.js';\n\nvar ViewAsFlashcards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewAsFlashcards, _Component);\n\n  function ViewAsFlashcards() {\n    _classCallCheck(this, ViewAsFlashcards);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ViewAsFlashcards).apply(this, arguments));\n  }\n\n  _createClass(ViewAsFlashcards, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      var setId = this.props.match.params.id;\n      var api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\n      var set = undefined;\n      fetch(api).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        json['sets'].forEach(function (flashcardSet) {\n          if (flashcardSet['id'] === setId) {\n            set = flashcardSet;\n          }\n        });\n\n        if (set) {\n          _this.setState({\n            isLoaded: true,\n            set: set\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \" Loading... \");\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(ViewFlashcardsHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(StudyFlashcards, {\n          flashcards: this.state.flashcards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return ViewAsFlashcards;\n}(Component);\n\nexport default ViewAsFlashcards;","map":{"version":3,"sources":["X:\\Programming\\Websites\\React Websites\\Flashcards\\react-flashcard-app\\src\\components\\pages\\flashcardSets\\viewAsFlashcards\\ViewAsFlashcards.js"],"names":["React","Component","ViewFlashcardsHeader","StudyFlashcards","ViewAsFlashcards","setId","props","match","params","id","api","set","undefined","fetch","then","res","json","forEach","flashcardSet","setState","isLoaded","state","flashcards"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;IAEMC,gB;;;;;;;;;;;;;wCAEiB;AAAA;;AACf,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAtC;AACA,UAAMC,GAAG,GAAG,qEAAZ;AACA,UAAIC,GAAG,GAAGC,SAAV;AACAC,MAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAE,IAAI,EAAI;AACVA,QAAAA,IAAI,CAAC,MAAD,CAAJ,CAAaC,OAAb,CAAqB,UAAUC,YAAV,EAAwB;AACzC,cAAIA,YAAY,CAAC,IAAD,CAAZ,KAAuBb,KAA3B,EAAkC;AAC9BM,YAAAA,GAAG,GAAGO,YAAN;AACH;AACJ,SAJD;;AAKA,YAAGP,GAAH,EAAQ;AACJ,UAAA,KAAI,CAACQ,QAAL,CAAc;AAACC,YAAAA,QAAQ,EAAE,IAAX;AAAiBT,YAAAA,GAAG,EAAEA;AAAtB,WAAd;AACH;AACJ,OAXL;AAYH;;;6BAEQ;AACL,UAAI,CAAC,KAAKU,KAAL,CAAWD,QAAhB,EAA0B;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH,OAFD,MAEO;AACH,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,eAAD;AAAiB,UAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAMH;AACJ;;;;EA/B0BrB,S;;AAkC/B,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ViewFlashcardsHeader from './ViewFlashcardsHeader.js';\r\nimport StudyFlashcards from './StudyFlashcards.js';\r\n\r\nclass ViewAsFlashcards extends Component {\r\n\r\n    componentDidMount(){\r\n        const setId = this.props.match.params.id;\r\n        const api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\r\n        let set = undefined;\r\n        fetch(api)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                json['sets'].forEach(function (flashcardSet) {\r\n                    if (flashcardSet['id'] === setId) {\r\n                        set = flashcardSet;\r\n                    }\r\n                });\r\n                if(set) {\r\n                    this.setState({isLoaded: true, set: set});\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            return <div> Loading... </div>\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <ViewFlashcardsHeader/>\r\n                    <StudyFlashcards flashcards={this.state.flashcards}/>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewAsFlashcards;\r\n"]},"metadata":{},"sourceType":"module"}