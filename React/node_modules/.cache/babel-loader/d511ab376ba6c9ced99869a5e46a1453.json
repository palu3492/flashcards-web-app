{"ast":null,"code":"import _classCallCheck from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\src\\\\components\\\\pages\\\\flashcardSets\\\\viewFlashcardSet\\\\ViewFlashcardSet.js\";\nimport React, { Component } from 'react';\nimport Flashcards from './Flashcards.js';\nimport ViewSetHeader from './ViewSetHeader.js';\n\nvar ViewFlashcardSet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewFlashcardSet, _Component);\n\n  function ViewFlashcardSet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewFlashcardSet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewFlashcardSet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      set: {},\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(ViewFlashcardSet, [{\n    key: \"componentDidMount\",\n\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item:[],\r\n            isLoaded: false\r\n        }\r\n    }\r\n    */\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //const setId = this.props.match.params.id;\n      var api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\n      var set = undefined;\n      fetch(api).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        json['sets'].forEach(function (flashcardSet) {\n          if (flashcardSet['id'] === '123') {\n            set = flashcardSet;\n          }\n        });\n\n        if (!set) {\n          _this2.setState({\n            isLoaded: true,\n            set: set\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \" Loading... \");\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(ViewSetHeader, {\n          setName: this.state.set.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(Flashcards, {\n          flashcards: this.state.set.flashcards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return ViewFlashcardSet;\n}(Component);\n\nexport default ViewFlashcardSet;","map":{"version":3,"sources":["X:\\Programming\\Websites\\React Websites\\Flashcards\\react-flashcard-app\\src\\components\\pages\\flashcardSets\\viewFlashcardSet\\ViewFlashcardSet.js"],"names":["React","Component","Flashcards","ViewSetHeader","ViewFlashcardSet","state","set","isLoaded","api","undefined","fetch","then","res","json","forEach","flashcardSet","setState","name","flashcards"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;IAEMC,gB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,GAAG,EAAE,EADD;AAEJC,MAAAA,QAAQ,EAAE;AAFN,K;;;;;;;AAKR;;;;;;;;;wCASmB;AAAA;;AACf;AACA,UAAMC,GAAG,GAAG,qEAAZ;AACA,UAAIF,GAAG,GAAGG,SAAV;AACAC,MAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAE,IAAI,EAAI;AACVA,QAAAA,IAAI,CAAC,MAAD,CAAJ,CAAaC,OAAb,CAAqB,UAAUC,YAAV,EAAwB;AACzC,cAAIA,YAAY,CAAC,IAAD,CAAZ,KAAuB,KAA3B,EAAkC;AAC9BT,YAAAA,GAAG,GAAGS,YAAN;AACH;AACJ,SAJD;;AAKA,YAAG,CAACT,GAAJ,EAAS;AACL,UAAA,MAAI,CAACU,QAAL,CAAc;AAACT,YAAAA,QAAQ,EAAE,IAAX;AAAiBD,YAAAA,GAAG,EAAEA;AAAtB,WAAd;AACH;AACJ,OAXL;AAYH;;;6BAEQ;AACL,UAAI,CAAC,KAAKD,KAAL,CAAWE,QAAhB,EAA0B;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH,OAFD,MAEO;AACH,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,GAAX,CAAeW,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,UAAD;AAAY,UAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWC,GAAX,CAAeY,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAMH;AACJ;;;;EA7C0BjB,S;;AAgD/B,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Flashcards from './Flashcards.js';\r\nimport ViewSetHeader from './ViewSetHeader.js';\r\n\r\nclass ViewFlashcardSet extends Component {\r\n\r\n    state = {\r\n        set: {},\r\n        isLoaded: false\r\n    };\r\n\r\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item:[],\r\n            isLoaded: false\r\n        }\r\n    }\r\n    */\r\n    componentDidMount(){\r\n        //const setId = this.props.match.params.id;\r\n        const api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\r\n        let set = undefined;\r\n        fetch(api)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                json['sets'].forEach(function (flashcardSet) {\r\n                    if (flashcardSet['id'] === '123') {\r\n                        set = flashcardSet;\r\n                    }\r\n                });\r\n                if(!set) {\r\n                    this.setState({isLoaded: true, set: set});\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            return <div> Loading... </div>\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <ViewSetHeader setName={this.state.set.name}/>\r\n                    <Flashcards flashcards={this.state.set.flashcards}/>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewFlashcardSet;\r\n"]},"metadata":{},"sourceType":"module"}