{"ast":null,"code":"import _classCallCheck from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/templateLayout/Header.js';\nimport Footer from './components/templateLayout/Footer.js';\nimport ViewFlashcardSet from './components/pages/flashcardSets/viewFlashcardSet/ViewFlashcardSet.js';\nimport EditFlashcardSet from './components/pages/flashcardSets/editFlashcardSet/EditFlashcardSet.js';\nimport { Link } from 'react-router-dom';\nimport ViewAsFlashcards from \"./components/pages/flashcardSets/viewAsFlashcards/ViewAsFlashcards\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      item: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\n      fetch(api).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \" Loading... \");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, item.name);\n        }), \";\");\n      }\n      /*\n      return (\n          <Router>\n              <div className=\"App\">\n              <div id='container'>\n                  <div id='side-left'/>\n                  <Header/>\n                  <div id='side-right'/>\n                   <div id='content'>\n                      <Route exact path='/' render={props => (\n                          <React.Fragment>\n                              <Link to=\"/view\">View</Link>\n                              <br/>\n                              <br/>\n                              <Link to=\"/edit\">Edit</Link>\n                          </React.Fragment>\n                      )}/>\n                      <Route path='/view' component={() => <ViewFlashcardSet/>}/>\n                      <Route path='/edit' component={() => <EditFlashcardSet/>}/>\n                      <Route path='/study' component={() => <ViewAsFlashcards/>}/>\n                  </div>\n                   <Footer id='footer'/>\n              </div>\n              </div>\n          </Router>\n      );\n      */\n\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["X:\\Programming\\Websites\\React Websites\\Flashcards\\react-flashcard-app\\src\\App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Footer","ViewFlashcardSet","EditFlashcardSet","Link","ViewAsFlashcards","App","props","state","item","isLoaded","api","fetch","then","res","json","setState","items","map","id","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,gBAAP,MAA6B,uEAA7B;AACA,OAAOC,gBAAP,MAA6B,uEAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,oEAA7B;;IAEMC,G;;;;;AAEF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,EADI;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;;;wCAEkB;AAAA;;AACf,UAAMC,GAAG,GAAG,qEAAZ;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAE,IAAI,EAAI;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACVN,UAAAA,QAAQ,EAAE,IADA;AAEVO,UAAAA,KAAK,EAAEF;AAFG,SAAd;AAIH,OAPL;AAQH;;;6BAEQ;AAAA,wBACoB,KAAKP,KADzB;AAAA,UACAE,QADA,eACAA,QADA;AAAA,UACUO,KADV,eACUA,KADV;;AAEL,UAAG,CAACP,QAAJ,EAAa;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH,OAFD,MAEK;AACD,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCO,KAAK,CAACC,GAAN,CAAU,UAAAT,IAAI;AAAA,iBACX;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACU,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKV,IAAI,CAACW,IADV,CADW;AAAA,SAAd,CADD,MADJ;AASH;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BH;;;;EAlEaxB,S;;AAqElB,eAAeU,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\nimport Header from './components/templateLayout/Header.js';\nimport Footer from './components/templateLayout/Footer.js';\nimport ViewFlashcardSet from './components/pages/flashcardSets/viewFlashcardSet/ViewFlashcardSet.js';\nimport EditFlashcardSet from './components/pages/flashcardSets/editFlashcardSet/EditFlashcardSet.js';\nimport { Link } from 'react-router-dom';\nimport ViewAsFlashcards from \"./components/pages/flashcardSets/viewAsFlashcards/ViewAsFlashcards\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item:[],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount(){\n        const api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\n        fetch(api)\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    items: json,\n                })\n            });\n    }\n\n    render() {\n        var {isLoaded, items } = this.state;\n        if(!isLoaded){\n            return <div> Loading... </div>\n        }else{\n            return (\n                <ul>\n                {items.map(item => (\n                    <li key={item.id}>\n                        {item.name}\n                    </li>\n                ))};\n                </ul>\n            );\n        }\n        /*\n        return (\n            <Router>\n                <div className=\"App\">\n                <div id='container'>\n                    <div id='side-left'/>\n                    <Header/>\n                    <div id='side-right'/>\n\n                    <div id='content'>\n                        <Route exact path='/' render={props => (\n                            <React.Fragment>\n                                <Link to=\"/view\">View</Link>\n                                <br/>\n                                <br/>\n                                <Link to=\"/edit\">Edit</Link>\n                            </React.Fragment>\n                        )}/>\n                        <Route path='/view' component={() => <ViewFlashcardSet/>}/>\n                        <Route path='/edit' component={() => <EditFlashcardSet/>}/>\n                        <Route path='/study' component={() => <ViewAsFlashcards/>}/>\n                    </div>\n\n                    <Footer id='footer'/>\n                </div>\n                </div>\n            </Router>\n        );\n        */\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}