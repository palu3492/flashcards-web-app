{"ast":null,"code":"import _classCallCheck from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\src\\\\components\\\\pages\\\\flashcardSets\\\\viewAsFlashcards\\\\ViewAsFlashcards.js\";\nimport React, { Component } from 'react';\nimport ViewFlashcardsHeader from './ViewFlashcardsHeader.js';\nimport StudyFlashcards from './StudyFlashcards.js';\n\nvar ViewAsFlashcards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewAsFlashcards, _Component);\n\n  function ViewAsFlashcards() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewAsFlashcards);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewAsFlashcards)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      set: {},\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(ViewAsFlashcards, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var setId = this.props.match.params.id;\n      var api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\n      var set = undefined;\n      fetch(api).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        json['sets'].forEach(function (flashcardSet) {\n          if (flashcardSet['id'] === setId) {\n            set = flashcardSet;\n          }\n        });\n\n        if (set) {\n          _this2.setState({\n            isLoaded: true,\n            set: set\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \" Loading... \");\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(ViewFlashcardsHeader, {\n          setName: this.state.set.name,\n          setId: this.state.set.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(StudyFlashcards, {\n          flashcards: this.state.set.flashcards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return ViewAsFlashcards;\n}(Component);\n\nexport default ViewAsFlashcards;","map":{"version":3,"sources":["X:\\Programming\\Websites\\React Websites\\Flashcards\\react-flashcard-app\\src\\components\\pages\\flashcardSets\\viewAsFlashcards\\ViewAsFlashcards.js"],"names":["React","Component","ViewFlashcardsHeader","StudyFlashcards","ViewAsFlashcards","state","set","isLoaded","setId","props","match","params","id","api","undefined","fetch","then","res","json","forEach","flashcardSet","setState","name","flashcards"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;IAEMC,gB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,GAAG,EAAE,EADD;AAEJC,MAAAA,QAAQ,EAAE;AAFN,K;;;;;;wCAKW;AAAA;;AACf,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAtC;AACA,UAAMC,GAAG,GAAG,qEAAZ;AACA,UAAIP,GAAG,GAAGQ,SAAV;AACAC,MAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAAAE,IAAI,EAAI;AACVA,QAAAA,IAAI,CAAC,MAAD,CAAJ,CAAaC,OAAb,CAAqB,UAAUC,YAAV,EAAwB;AACzC,cAAIA,YAAY,CAAC,IAAD,CAAZ,KAAuBZ,KAA3B,EAAkC;AAC9BF,YAAAA,GAAG,GAAGc,YAAN;AACH;AACJ,SAJD;;AAKA,YAAGd,GAAH,EAAQ;AACJ,UAAA,MAAI,CAACe,QAAL,CAAc;AAACd,YAAAA,QAAQ,EAAE,IAAX;AAAiBD,YAAAA,GAAG,EAAEA;AAAtB,WAAd;AACH;AACJ,OAXL;AAYH;;;6BAEQ;AACL,UAAI,CAAC,KAAKD,KAAL,CAAWE,QAAhB,EAA0B;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH,OAFD,MAEO;AACH,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,oBAAD;AAAsB,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,GAAX,CAAegB,IAA9C;AAAoD,UAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,GAAX,CAAeM,EAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,eAAD;AAAiB,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,GAAX,CAAeiB,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAMH;AACJ;;;;EApC0BtB,S;;AAuC/B,eAAeG,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ViewFlashcardsHeader from './ViewFlashcardsHeader.js';\r\nimport StudyFlashcards from './StudyFlashcards.js';\r\n\r\nclass ViewAsFlashcards extends Component {\r\n\r\n    state = {\r\n        set: {},\r\n        isLoaded: false\r\n    };\r\n\r\n    componentDidMount(){\r\n        const setId = this.props.match.params.id;\r\n        const api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\r\n        let set = undefined;\r\n        fetch(api)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                json['sets'].forEach(function (flashcardSet) {\r\n                    if (flashcardSet['id'] === setId) {\r\n                        set = flashcardSet;\r\n                    }\r\n                });\r\n                if(set) {\r\n                    this.setState({isLoaded: true, set: set});\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            return <div> Loading... </div>\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <ViewFlashcardsHeader setName={this.state.set.name} setId={this.state.set.id}/>\r\n                    <StudyFlashcards flashcards={this.state.set.flashcards}/>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ViewAsFlashcards;\r\n"]},"metadata":{},"sourceType":"module"}