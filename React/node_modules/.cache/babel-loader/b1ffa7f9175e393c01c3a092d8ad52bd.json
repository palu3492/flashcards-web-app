{"ast":null,"code":"import _toConsumableArray from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"X:\\\\Programming\\\\Websites\\\\React Websites\\\\Flashcards\\\\react-flashcard-app\\\\src\\\\components\\\\pages\\\\flashcardSets\\\\editFlashcardSet\\\\EditFlashcardSet.js\";\nimport React, { Component } from 'react';\nimport Flashcards from './Flashcards.js';\nimport EditSetHeader from './EditSetHeader.js';\nimport AddFlashcard from \"./AddFlashcard\";\nimport SaveSet from \"./SaveSet\";\n\nvar EditFlashcardSet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditFlashcardSet, _Component);\n\n  function EditFlashcardSet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditFlashcardSet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditFlashcardSet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      set: {},\n      isLoaded: false,\n      idCount: 0\n    };\n\n    _this.onChange = function (id, e) {\n      e.persist(); // not sure why I need this\n\n      _this.setState(function (prevState) {\n        var set = _objectSpread({}, prevState.set);\n\n        set.flashcards.map(function (flashcard) {\n          if (flashcard.id === id) {\n            if (e.target.name === 'term') {\n              flashcard.term = e.target.value;\n            } else {\n              flashcard.definition = e.target.value;\n            }\n          }\n\n          return flashcard;\n        });\n        return {\n          set: set\n        };\n      });\n    };\n\n    _this.onChangeName = function (e) {\n      _this.setState(function (prevState) {\n        var set = _objectSpread({}, prevState.set);\n\n        set.name = e.target.value;\n        return {\n          set: set\n        };\n      });\n    };\n\n    _this.addFlashcard = function () {\n      _this.setState(function (prevState) {\n        var set = _objectSpread({}, prevState.set);\n\n        set.flashcards = [].concat(_toConsumableArray(set.flashcards), [{\n          id: prevState.idCount + 1,\n          term: '',\n          definition: ''\n        }]);\n        return {\n          set: set,\n          idCount: prevState.idCount + 1\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditFlashcardSet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var setId = this.props.match.params.id;\n      var api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\n      var set = undefined;\n      fetch(api).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        json['sets'].forEach(function (flashcardSet) {\n          if (flashcardSet['id'] === setId) {\n            set = flashcardSet;\n          }\n        });\n\n        if (set) {\n          _this2.setState({\n            isLoaded: true,\n            set: set,\n            idCount: set.flashcards.length\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \" Loading... \");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(EditSetHeader, {\n          setName: this.state.set.name,\n          inputChange: this.onChangeName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(Flashcards, {\n          flashcards: this.state.set.flashcards,\n          inputChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(AddFlashcard, {\n          addFlashcard: this.addFlashcard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(SaveSet, {\n          setId: this.state.set.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return EditFlashcardSet;\n}(Component);\n\nexport default EditFlashcardSet;","map":{"version":3,"sources":["X:\\Programming\\Websites\\React Websites\\Flashcards\\react-flashcard-app\\src\\components\\pages\\flashcardSets\\editFlashcardSet\\EditFlashcardSet.js"],"names":["React","Component","Flashcards","EditSetHeader","AddFlashcard","SaveSet","EditFlashcardSet","state","set","isLoaded","idCount","onChange","id","e","persist","setState","prevState","flashcards","map","flashcard","target","name","term","value","definition","onChangeName","addFlashcard","setId","props","match","params","api","undefined","fetch","then","res","json","forEach","flashcardSet","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Flashcards from './Flashcards.js';\r\nimport EditSetHeader from './EditSetHeader.js';\r\nimport AddFlashcard from \"./AddFlashcard\";\r\nimport SaveSet from \"./SaveSet\";\r\n\r\nclass EditFlashcardSet extends Component {\r\n\r\n    state = {\r\n        set: {},\r\n        isLoaded: false,\r\n        idCount: 0\r\n    };\r\n\r\n    componentDidMount(){\r\n        const setId = this.props.match.params.id;\r\n        const api = 'https://my-json-server.typicode.com/palu3492/react-flashcard-app/db';\r\n        let set = undefined;\r\n        fetch(api)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                json['sets'].forEach(function (flashcardSet) {\r\n                    if (flashcardSet['id'] === setId) {\r\n                        set = flashcardSet;\r\n                    }\r\n                });\r\n                if(set) {\r\n                    this.setState({isLoaded: true, set: set, idCount: set.flashcards.length});\r\n                }\r\n            });\r\n    }\r\n\r\n    onChange = (id, e) => {\r\n        e.persist(); // not sure why I need this\r\n        this.setState(prevState => {\r\n            let set = { ...prevState.set };\r\n            set.flashcards.map(flashcard => {\r\n                if (flashcard.id === id) {\r\n                    if (e.target.name === 'term') {\r\n                        flashcard.term = e.target.value;\r\n                    } else {\r\n                        flashcard.definition = e.target.value;\r\n                    }\r\n                }\r\n                return flashcard;\r\n            });\r\n            return {set: set};\r\n        });\r\n    };\r\n\r\n    onChangeName = (e) => {\r\n        this.setState(prevState => {\r\n            let set = { ...prevState.set };\r\n            set.name = e.target.value;\r\n            return {set: set};\r\n        })\r\n    };\r\n\r\n    addFlashcard = () =>  {\r\n        this.setState(prevState => {\r\n            let set = { ...prevState.set };\r\n            set.flashcards = [...set.flashcards, {id: prevState.idCount+1, term: '', definition: ''}];\r\n            return {set: set, idCount: prevState.idCount+1};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.isLoaded) {\r\n            return <div> Loading... </div>\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <EditSetHeader setName={this.state.set.name} inputChange={this.onChangeName}/>\r\n                    <Flashcards flashcards={this.state.set.flashcards} inputChange={this.onChange}/>\r\n                    <AddFlashcard addFlashcard={this.addFlashcard}/>\r\n                    <SaveSet setId={this.state.set.id}/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default EditFlashcardSet;\r\n"]},"metadata":{},"sourceType":"module"}